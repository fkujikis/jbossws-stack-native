// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service;

import com.sun.xml.rpc.server.http.MessageContextProperties;
import com.sun.xml.rpc.streaming.*;
import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.soap.SOAPConstants;
import com.sun.xml.rpc.encoding.soap.SOAP12Constants;
import com.sun.xml.rpc.encoding.literal.*;
import com.sun.xml.rpc.soap.streaming.*;
import com.sun.xml.rpc.soap.message.*;
import com.sun.xml.rpc.soap.SOAPVersion;
import com.sun.xml.rpc.soap.SOAPEncodingConstants;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;
import javax.xml.namespace.QName;
import java.rmi.RemoteException;
import java.util.Iterator;
import java.lang.reflect.*;
import java.lang.Class;
import com.sun.xml.rpc.server.*;
import javax.xml.rpc.handler.HandlerInfo;
import com.sun.xml.rpc.client.HandlerChainImpl;

public class IBaseDataTypesRpcLit_Tie
    extends com.sun.xml.rpc.server.TieBase implements SerializerConstants {
    
    
    
    public IBaseDataTypesRpcLit_Tie() throws Exception {
        super(new org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.BaseDataTypesRpcLitService_SerializerRegistry().getRegistry());
        initialize(internalTypeMappingRegistry);
    }
    
    /*
     * This method does the actual method invocation for operation: RetDateTime
     */
    private void invoke_RetDateTime(StreamingHandlerState state) throws Exception {
        
        org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetDateTime_RequestStruct myIBaseDataTypesRpcLit_RetDateTime_RequestStruct = null;
        Object myIBaseDataTypesRpcLit_RetDateTime_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myIBaseDataTypesRpcLit_RetDateTime_RequestStructObj instanceof SOAPDeserializationState) {
            myIBaseDataTypesRpcLit_RetDateTime_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetDateTime_RequestStruct)((SOAPDeserializationState)myIBaseDataTypesRpcLit_RetDateTime_RequestStructObj).getInstance();
        } else {
            myIBaseDataTypesRpcLit_RetDateTime_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetDateTime_RequestStruct)myIBaseDataTypesRpcLit_RetDateTime_RequestStructObj;
        }
        
        try {
            org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetDateTime_ResponseStruct _response = new org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetDateTime_ResponseStruct();
            java.util.Calendar retDateTimeResult = 
                ((org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit) getTarget()).retDateTime(myIBaseDataTypesRpcLit_RetDateTime_RequestStruct.getInDateTime());
            
            SOAPHeaderBlockInfo headerInfo;
            _response.setRetDateTimeResult(retDateTimeResult);
            
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetDateTime_RetDateTimeResponse_QNAME);
            bodyBlock.setValue(_response);
            bodyBlock.setSerializer(ns1_myIBaseDataTypesRpcLit_RetDateTime_ResponseStruct_LiteralSerializer);
            state.getResponse().setBody(bodyBlock);
            
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: RetSingle
     */
    private void invoke_RetSingle(StreamingHandlerState state) throws Exception {
        
        org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetSingle_RequestStruct myIBaseDataTypesRpcLit_RetSingle_RequestStruct = null;
        Object myIBaseDataTypesRpcLit_RetSingle_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myIBaseDataTypesRpcLit_RetSingle_RequestStructObj instanceof SOAPDeserializationState) {
            myIBaseDataTypesRpcLit_RetSingle_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetSingle_RequestStruct)((SOAPDeserializationState)myIBaseDataTypesRpcLit_RetSingle_RequestStructObj).getInstance();
        } else {
            myIBaseDataTypesRpcLit_RetSingle_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetSingle_RequestStruct)myIBaseDataTypesRpcLit_RetSingle_RequestStructObj;
        }
        
        try {
            org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetSingle_ResponseStruct _response = new org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetSingle_ResponseStruct();
            float retSingleResult = 
                ((org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit) getTarget()).retSingle(myIBaseDataTypesRpcLit_RetSingle_RequestStruct.getInSingle());
            
            SOAPHeaderBlockInfo headerInfo;
            _response.setRetSingleResult(retSingleResult);
            
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetSingle_RetSingleResponse_QNAME);
            bodyBlock.setValue(_response);
            bodyBlock.setSerializer(ns1_myIBaseDataTypesRpcLit_RetSingle_ResponseStruct_LiteralSerializer);
            state.getResponse().setBody(bodyBlock);
            
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: RetChar
     */
    private void invoke_RetChar(StreamingHandlerState state) throws Exception {
        
        org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetChar_RequestStruct myIBaseDataTypesRpcLit_RetChar_RequestStruct = null;
        Object myIBaseDataTypesRpcLit_RetChar_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myIBaseDataTypesRpcLit_RetChar_RequestStructObj instanceof SOAPDeserializationState) {
            myIBaseDataTypesRpcLit_RetChar_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetChar_RequestStruct)((SOAPDeserializationState)myIBaseDataTypesRpcLit_RetChar_RequestStructObj).getInstance();
        } else {
            myIBaseDataTypesRpcLit_RetChar_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetChar_RequestStruct)myIBaseDataTypesRpcLit_RetChar_RequestStructObj;
        }
        
        try {
            org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetChar_ResponseStruct _response = new org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetChar_ResponseStruct();
            int retCharResult = 
                ((org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit) getTarget()).retChar(myIBaseDataTypesRpcLit_RetChar_RequestStruct.getInChar());
            
            SOAPHeaderBlockInfo headerInfo;
            _response.setRetCharResult(retCharResult);
            
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetChar_RetCharResponse_QNAME);
            bodyBlock.setValue(_response);
            bodyBlock.setSerializer(ns1_myIBaseDataTypesRpcLit_RetChar_ResponseStruct_LiteralSerializer);
            state.getResponse().setBody(bodyBlock);
            
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: RetInt
     */
    private void invoke_RetInt(StreamingHandlerState state) throws Exception {
        
        org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetInt_RequestStruct myIBaseDataTypesRpcLit_RetInt_RequestStruct = null;
        Object myIBaseDataTypesRpcLit_RetInt_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myIBaseDataTypesRpcLit_RetInt_RequestStructObj instanceof SOAPDeserializationState) {
            myIBaseDataTypesRpcLit_RetInt_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetInt_RequestStruct)((SOAPDeserializationState)myIBaseDataTypesRpcLit_RetInt_RequestStructObj).getInstance();
        } else {
            myIBaseDataTypesRpcLit_RetInt_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetInt_RequestStruct)myIBaseDataTypesRpcLit_RetInt_RequestStructObj;
        }
        
        try {
            org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetInt_ResponseStruct _response = new org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetInt_ResponseStruct();
            int retIntResult = 
                ((org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit) getTarget()).retInt(myIBaseDataTypesRpcLit_RetInt_RequestStruct.getInInt());
            
            SOAPHeaderBlockInfo headerInfo;
            _response.setRetIntResult(retIntResult);
            
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetInt_RetIntResponse_QNAME);
            bodyBlock.setValue(_response);
            bodyBlock.setSerializer(ns1_myIBaseDataTypesRpcLit_RetInt_ResponseStruct_LiteralSerializer);
            state.getResponse().setBody(bodyBlock);
            
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: RetULong
     */
    private void invoke_RetULong(StreamingHandlerState state) throws Exception {
        
        org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetULong_RequestStruct myIBaseDataTypesRpcLit_RetULong_RequestStruct = null;
        Object myIBaseDataTypesRpcLit_RetULong_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myIBaseDataTypesRpcLit_RetULong_RequestStructObj instanceof SOAPDeserializationState) {
            myIBaseDataTypesRpcLit_RetULong_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetULong_RequestStruct)((SOAPDeserializationState)myIBaseDataTypesRpcLit_RetULong_RequestStructObj).getInstance();
        } else {
            myIBaseDataTypesRpcLit_RetULong_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetULong_RequestStruct)myIBaseDataTypesRpcLit_RetULong_RequestStructObj;
        }
        
        try {
            org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetULong_ResponseStruct _response = new org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetULong_ResponseStruct();
            java.math.BigInteger retULongResult = 
                ((org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit) getTarget()).retULong(myIBaseDataTypesRpcLit_RetULong_RequestStruct.getInULong());
            
            SOAPHeaderBlockInfo headerInfo;
            _response.setRetULongResult(retULongResult);
            
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetULong_RetULongResponse_QNAME);
            bodyBlock.setValue(_response);
            bodyBlock.setSerializer(ns1_myIBaseDataTypesRpcLit_RetULong_ResponseStruct_LiteralSerializer);
            state.getResponse().setBody(bodyBlock);
            
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: RetUri
     */
    private void invoke_RetUri(StreamingHandlerState state) throws Exception {
        
        org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetUri_RequestStruct myIBaseDataTypesRpcLit_RetUri_RequestStruct = null;
        Object myIBaseDataTypesRpcLit_RetUri_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myIBaseDataTypesRpcLit_RetUri_RequestStructObj instanceof SOAPDeserializationState) {
            myIBaseDataTypesRpcLit_RetUri_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetUri_RequestStruct)((SOAPDeserializationState)myIBaseDataTypesRpcLit_RetUri_RequestStructObj).getInstance();
        } else {
            myIBaseDataTypesRpcLit_RetUri_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetUri_RequestStruct)myIBaseDataTypesRpcLit_RetUri_RequestStructObj;
        }
        
        try {
            org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetUri_ResponseStruct _response = new org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetUri_ResponseStruct();
            java.net.URI retUriResult = 
                ((org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit) getTarget()).retUri(myIBaseDataTypesRpcLit_RetUri_RequestStruct.getInUri());
            
            SOAPHeaderBlockInfo headerInfo;
            _response.setRetUriResult(retUriResult);
            
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetUri_RetUriResponse_QNAME);
            bodyBlock.setValue(_response);
            bodyBlock.setSerializer(ns1_myIBaseDataTypesRpcLit_RetUri_ResponseStruct_LiteralSerializer);
            state.getResponse().setBody(bodyBlock);
            
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: RetQName
     */
    private void invoke_RetQName(StreamingHandlerState state) throws Exception {
        
        org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetQName_RequestStruct myIBaseDataTypesRpcLit_RetQName_RequestStruct = null;
        Object myIBaseDataTypesRpcLit_RetQName_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myIBaseDataTypesRpcLit_RetQName_RequestStructObj instanceof SOAPDeserializationState) {
            myIBaseDataTypesRpcLit_RetQName_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetQName_RequestStruct)((SOAPDeserializationState)myIBaseDataTypesRpcLit_RetQName_RequestStructObj).getInstance();
        } else {
            myIBaseDataTypesRpcLit_RetQName_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetQName_RequestStruct)myIBaseDataTypesRpcLit_RetQName_RequestStructObj;
        }
        
        try {
            org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetQName_ResponseStruct _response = new org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetQName_ResponseStruct();
            javax.xml.namespace.QName retQNameResult = 
                ((org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit) getTarget()).retQName(myIBaseDataTypesRpcLit_RetQName_RequestStruct.getInQName());
            
            SOAPHeaderBlockInfo headerInfo;
            _response.setRetQNameResult(retQNameResult);
            
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetQName_RetQNameResponse_QNAME);
            bodyBlock.setValue(_response);
            bodyBlock.setSerializer(ns1_myIBaseDataTypesRpcLit_RetQName_ResponseStruct_LiteralSerializer);
            state.getResponse().setBody(bodyBlock);
            
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: RetShort
     */
    private void invoke_RetShort(StreamingHandlerState state) throws Exception {
        
        org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetShort_RequestStruct myIBaseDataTypesRpcLit_RetShort_RequestStruct = null;
        Object myIBaseDataTypesRpcLit_RetShort_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myIBaseDataTypesRpcLit_RetShort_RequestStructObj instanceof SOAPDeserializationState) {
            myIBaseDataTypesRpcLit_RetShort_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetShort_RequestStruct)((SOAPDeserializationState)myIBaseDataTypesRpcLit_RetShort_RequestStructObj).getInstance();
        } else {
            myIBaseDataTypesRpcLit_RetShort_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetShort_RequestStruct)myIBaseDataTypesRpcLit_RetShort_RequestStructObj;
        }
        
        try {
            org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetShort_ResponseStruct _response = new org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetShort_ResponseStruct();
            short retShortResult = 
                ((org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit) getTarget()).retShort(myIBaseDataTypesRpcLit_RetShort_RequestStruct.getInShort());
            
            SOAPHeaderBlockInfo headerInfo;
            _response.setRetShortResult(retShortResult);
            
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetShort_RetShortResponse_QNAME);
            bodyBlock.setValue(_response);
            bodyBlock.setSerializer(ns1_myIBaseDataTypesRpcLit_RetShort_ResponseStruct_LiteralSerializer);
            state.getResponse().setBody(bodyBlock);
            
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: RetDecimal
     */
    private void invoke_RetDecimal(StreamingHandlerState state) throws Exception {
        
        org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetDecimal_RequestStruct myIBaseDataTypesRpcLit_RetDecimal_RequestStruct = null;
        Object myIBaseDataTypesRpcLit_RetDecimal_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myIBaseDataTypesRpcLit_RetDecimal_RequestStructObj instanceof SOAPDeserializationState) {
            myIBaseDataTypesRpcLit_RetDecimal_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetDecimal_RequestStruct)((SOAPDeserializationState)myIBaseDataTypesRpcLit_RetDecimal_RequestStructObj).getInstance();
        } else {
            myIBaseDataTypesRpcLit_RetDecimal_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetDecimal_RequestStruct)myIBaseDataTypesRpcLit_RetDecimal_RequestStructObj;
        }
        
        try {
            org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetDecimal_ResponseStruct _response = new org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetDecimal_ResponseStruct();
            java.math.BigDecimal retDecimalResult = 
                ((org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit) getTarget()).retDecimal(myIBaseDataTypesRpcLit_RetDecimal_RequestStruct.getInDecimal());
            
            SOAPHeaderBlockInfo headerInfo;
            _response.setRetDecimalResult(retDecimalResult);
            
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetDecimal_RetDecimalResponse_QNAME);
            bodyBlock.setValue(_response);
            bodyBlock.setSerializer(ns1_myIBaseDataTypesRpcLit_RetDecimal_ResponseStruct_LiteralSerializer);
            state.getResponse().setBody(bodyBlock);
            
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: RetUShort
     */
    private void invoke_RetUShort(StreamingHandlerState state) throws Exception {
        
        org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetUShort_RequestStruct myIBaseDataTypesRpcLit_RetUShort_RequestStruct = null;
        Object myIBaseDataTypesRpcLit_RetUShort_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myIBaseDataTypesRpcLit_RetUShort_RequestStructObj instanceof SOAPDeserializationState) {
            myIBaseDataTypesRpcLit_RetUShort_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetUShort_RequestStruct)((SOAPDeserializationState)myIBaseDataTypesRpcLit_RetUShort_RequestStructObj).getInstance();
        } else {
            myIBaseDataTypesRpcLit_RetUShort_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetUShort_RequestStruct)myIBaseDataTypesRpcLit_RetUShort_RequestStructObj;
        }
        
        try {
            org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetUShort_ResponseStruct _response = new org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetUShort_ResponseStruct();
            int retUShortResult = 
                ((org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit) getTarget()).retUShort(myIBaseDataTypesRpcLit_RetUShort_RequestStruct.getInUShort());
            
            SOAPHeaderBlockInfo headerInfo;
            _response.setRetUShortResult(retUShortResult);
            
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetUShort_RetUShortResponse_QNAME);
            bodyBlock.setValue(_response);
            bodyBlock.setSerializer(ns1_myIBaseDataTypesRpcLit_RetUShort_ResponseStruct_LiteralSerializer);
            state.getResponse().setBody(bodyBlock);
            
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: RetByteArray
     */
    private void invoke_RetByteArray(StreamingHandlerState state) throws Exception {
        
        org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetByteArray_RequestStruct myIBaseDataTypesRpcLit_RetByteArray_RequestStruct = null;
        Object myIBaseDataTypesRpcLit_RetByteArray_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myIBaseDataTypesRpcLit_RetByteArray_RequestStructObj instanceof SOAPDeserializationState) {
            myIBaseDataTypesRpcLit_RetByteArray_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetByteArray_RequestStruct)((SOAPDeserializationState)myIBaseDataTypesRpcLit_RetByteArray_RequestStructObj).getInstance();
        } else {
            myIBaseDataTypesRpcLit_RetByteArray_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetByteArray_RequestStruct)myIBaseDataTypesRpcLit_RetByteArray_RequestStructObj;
        }
        
        try {
            org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetByteArray_ResponseStruct _response = new org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetByteArray_ResponseStruct();
            byte[] retByteArrayResult = 
                ((org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit) getTarget()).retByteArray(myIBaseDataTypesRpcLit_RetByteArray_RequestStruct.getInByteArray());
            
            SOAPHeaderBlockInfo headerInfo;
            _response.setRetByteArrayResult(retByteArrayResult);
            
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetByteArray_RetByteArrayResponse_QNAME);
            bodyBlock.setValue(_response);
            bodyBlock.setSerializer(ns1_myIBaseDataTypesRpcLit_RetByteArray_ResponseStruct_LiteralSerializer);
            state.getResponse().setBody(bodyBlock);
            
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: RetTimeSpan
     */
    private void invoke_RetTimeSpan(StreamingHandlerState state) throws Exception {
        
        org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetTimeSpan_RequestStruct myIBaseDataTypesRpcLit_RetTimeSpan_RequestStruct = null;
        Object myIBaseDataTypesRpcLit_RetTimeSpan_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myIBaseDataTypesRpcLit_RetTimeSpan_RequestStructObj instanceof SOAPDeserializationState) {
            myIBaseDataTypesRpcLit_RetTimeSpan_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetTimeSpan_RequestStruct)((SOAPDeserializationState)myIBaseDataTypesRpcLit_RetTimeSpan_RequestStructObj).getInstance();
        } else {
            myIBaseDataTypesRpcLit_RetTimeSpan_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetTimeSpan_RequestStruct)myIBaseDataTypesRpcLit_RetTimeSpan_RequestStructObj;
        }
        
        try {
            org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetTimeSpan_ResponseStruct _response = new org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetTimeSpan_ResponseStruct();
            java.lang.String retTimeSpanResult = 
                ((org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit) getTarget()).retTimeSpan(myIBaseDataTypesRpcLit_RetTimeSpan_RequestStruct.getInTimeSpan());
            
            SOAPHeaderBlockInfo headerInfo;
            _response.setRetTimeSpanResult(retTimeSpanResult);
            
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetTimeSpan_RetTimeSpanResponse_QNAME);
            bodyBlock.setValue(_response);
            bodyBlock.setSerializer(ns1_myIBaseDataTypesRpcLit_RetTimeSpan_ResponseStruct_LiteralSerializer);
            state.getResponse().setBody(bodyBlock);
            
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: RetObject
     */
    private void invoke_RetObject(StreamingHandlerState state) throws Exception {
        
        org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetObject_RequestStruct myIBaseDataTypesRpcLit_RetObject_RequestStruct = null;
        Object myIBaseDataTypesRpcLit_RetObject_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myIBaseDataTypesRpcLit_RetObject_RequestStructObj instanceof SOAPDeserializationState) {
            myIBaseDataTypesRpcLit_RetObject_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetObject_RequestStruct)((SOAPDeserializationState)myIBaseDataTypesRpcLit_RetObject_RequestStructObj).getInstance();
        } else {
            myIBaseDataTypesRpcLit_RetObject_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetObject_RequestStruct)myIBaseDataTypesRpcLit_RetObject_RequestStructObj;
        }
        
        try {
            org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetObject_ResponseStruct _response = new org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetObject_ResponseStruct();
            javax.xml.soap.SOAPElement retObjectResult = 
                ((org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit) getTarget()).retObject(myIBaseDataTypesRpcLit_RetObject_RequestStruct.getInObject());
            
            SOAPHeaderBlockInfo headerInfo;
            _response.setRetObjectResult(retObjectResult);
            
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetObject_RetObjectResponse_QNAME);
            bodyBlock.setValue(_response);
            bodyBlock.setSerializer(ns1_myIBaseDataTypesRpcLit_RetObject_ResponseStruct_LiteralSerializer);
            state.getResponse().setBody(bodyBlock);
            
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: RetSByte
     */
    private void invoke_RetSByte(StreamingHandlerState state) throws Exception {
        
        org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetSByte_RequestStruct myIBaseDataTypesRpcLit_RetSByte_RequestStruct = null;
        Object myIBaseDataTypesRpcLit_RetSByte_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myIBaseDataTypesRpcLit_RetSByte_RequestStructObj instanceof SOAPDeserializationState) {
            myIBaseDataTypesRpcLit_RetSByte_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetSByte_RequestStruct)((SOAPDeserializationState)myIBaseDataTypesRpcLit_RetSByte_RequestStructObj).getInstance();
        } else {
            myIBaseDataTypesRpcLit_RetSByte_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetSByte_RequestStruct)myIBaseDataTypesRpcLit_RetSByte_RequestStructObj;
        }
        
        try {
            org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetSByte_ResponseStruct _response = new org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetSByte_ResponseStruct();
            byte retSByteResult = 
                ((org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit) getTarget()).retSByte(myIBaseDataTypesRpcLit_RetSByte_RequestStruct.getInSByte());
            
            SOAPHeaderBlockInfo headerInfo;
            _response.setRetSByteResult(retSByteResult);
            
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetSByte_RetSByteResponse_QNAME);
            bodyBlock.setValue(_response);
            bodyBlock.setSerializer(ns1_myIBaseDataTypesRpcLit_RetSByte_ResponseStruct_LiteralSerializer);
            state.getResponse().setBody(bodyBlock);
            
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: RetUInt
     */
    private void invoke_RetUInt(StreamingHandlerState state) throws Exception {
        
        org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetUInt_RequestStruct myIBaseDataTypesRpcLit_RetUInt_RequestStruct = null;
        Object myIBaseDataTypesRpcLit_RetUInt_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myIBaseDataTypesRpcLit_RetUInt_RequestStructObj instanceof SOAPDeserializationState) {
            myIBaseDataTypesRpcLit_RetUInt_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetUInt_RequestStruct)((SOAPDeserializationState)myIBaseDataTypesRpcLit_RetUInt_RequestStructObj).getInstance();
        } else {
            myIBaseDataTypesRpcLit_RetUInt_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetUInt_RequestStruct)myIBaseDataTypesRpcLit_RetUInt_RequestStructObj;
        }
        
        try {
            org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetUInt_ResponseStruct _response = new org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetUInt_ResponseStruct();
            long retUIntResult = 
                ((org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit) getTarget()).retUInt(myIBaseDataTypesRpcLit_RetUInt_RequestStruct.getInUInt());
            
            SOAPHeaderBlockInfo headerInfo;
            _response.setRetUIntResult(retUIntResult);
            
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetUInt_RetUIntResponse_QNAME);
            bodyBlock.setValue(_response);
            bodyBlock.setSerializer(ns1_myIBaseDataTypesRpcLit_RetUInt_ResponseStruct_LiteralSerializer);
            state.getResponse().setBody(bodyBlock);
            
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: RetGuid
     */
    private void invoke_RetGuid(StreamingHandlerState state) throws Exception {
        
        org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetGuid_RequestStruct myIBaseDataTypesRpcLit_RetGuid_RequestStruct = null;
        Object myIBaseDataTypesRpcLit_RetGuid_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myIBaseDataTypesRpcLit_RetGuid_RequestStructObj instanceof SOAPDeserializationState) {
            myIBaseDataTypesRpcLit_RetGuid_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetGuid_RequestStruct)((SOAPDeserializationState)myIBaseDataTypesRpcLit_RetGuid_RequestStructObj).getInstance();
        } else {
            myIBaseDataTypesRpcLit_RetGuid_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetGuid_RequestStruct)myIBaseDataTypesRpcLit_RetGuid_RequestStructObj;
        }
        
        try {
            org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetGuid_ResponseStruct _response = new org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetGuid_ResponseStruct();
            java.lang.String retGuidResult = 
                ((org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit) getTarget()).retGuid(myIBaseDataTypesRpcLit_RetGuid_RequestStruct.getInGuid());
            
            SOAPHeaderBlockInfo headerInfo;
            _response.setRetGuidResult(retGuidResult);
            
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetGuid_RetGuidResponse_QNAME);
            bodyBlock.setValue(_response);
            bodyBlock.setSerializer(ns1_myIBaseDataTypesRpcLit_RetGuid_ResponseStruct_LiteralSerializer);
            state.getResponse().setBody(bodyBlock);
            
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: RetBool
     */
    private void invoke_RetBool(StreamingHandlerState state) throws Exception {
        
        org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetBool_RequestStruct myIBaseDataTypesRpcLit_RetBool_RequestStruct = null;
        Object myIBaseDataTypesRpcLit_RetBool_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myIBaseDataTypesRpcLit_RetBool_RequestStructObj instanceof SOAPDeserializationState) {
            myIBaseDataTypesRpcLit_RetBool_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetBool_RequestStruct)((SOAPDeserializationState)myIBaseDataTypesRpcLit_RetBool_RequestStructObj).getInstance();
        } else {
            myIBaseDataTypesRpcLit_RetBool_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetBool_RequestStruct)myIBaseDataTypesRpcLit_RetBool_RequestStructObj;
        }
        
        try {
            org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetBool_ResponseStruct _response = new org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetBool_ResponseStruct();
            boolean retBoolResult = 
                ((org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit) getTarget()).retBool(myIBaseDataTypesRpcLit_RetBool_RequestStruct.isInBool());
            
            SOAPHeaderBlockInfo headerInfo;
            _response.setRetBoolResult(retBoolResult);
            
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetBool_RetBoolResponse_QNAME);
            bodyBlock.setValue(_response);
            bodyBlock.setSerializer(ns1_myIBaseDataTypesRpcLit_RetBool_ResponseStruct_LiteralSerializer);
            state.getResponse().setBody(bodyBlock);
            
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: RetFloat
     */
    private void invoke_RetFloat(StreamingHandlerState state) throws Exception {
        
        org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetFloat_RequestStruct myIBaseDataTypesRpcLit_RetFloat_RequestStruct = null;
        Object myIBaseDataTypesRpcLit_RetFloat_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myIBaseDataTypesRpcLit_RetFloat_RequestStructObj instanceof SOAPDeserializationState) {
            myIBaseDataTypesRpcLit_RetFloat_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetFloat_RequestStruct)((SOAPDeserializationState)myIBaseDataTypesRpcLit_RetFloat_RequestStructObj).getInstance();
        } else {
            myIBaseDataTypesRpcLit_RetFloat_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetFloat_RequestStruct)myIBaseDataTypesRpcLit_RetFloat_RequestStructObj;
        }
        
        try {
            org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetFloat_ResponseStruct _response = new org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetFloat_ResponseStruct();
            float retFloatResult = 
                ((org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit) getTarget()).retFloat(myIBaseDataTypesRpcLit_RetFloat_RequestStruct.getInFloat());
            
            SOAPHeaderBlockInfo headerInfo;
            _response.setRetFloatResult(retFloatResult);
            
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetFloat_RetFloatResponse_QNAME);
            bodyBlock.setValue(_response);
            bodyBlock.setSerializer(ns1_myIBaseDataTypesRpcLit_RetFloat_ResponseStruct_LiteralSerializer);
            state.getResponse().setBody(bodyBlock);
            
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: RetString
     */
    private void invoke_RetString(StreamingHandlerState state) throws Exception {
        
        org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetString_RequestStruct myIBaseDataTypesRpcLit_RetString_RequestStruct = null;
        Object myIBaseDataTypesRpcLit_RetString_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myIBaseDataTypesRpcLit_RetString_RequestStructObj instanceof SOAPDeserializationState) {
            myIBaseDataTypesRpcLit_RetString_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetString_RequestStruct)((SOAPDeserializationState)myIBaseDataTypesRpcLit_RetString_RequestStructObj).getInstance();
        } else {
            myIBaseDataTypesRpcLit_RetString_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetString_RequestStruct)myIBaseDataTypesRpcLit_RetString_RequestStructObj;
        }
        
        try {
            org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetString_ResponseStruct _response = new org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetString_ResponseStruct();
            java.lang.String retStringResult = 
                ((org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit) getTarget()).retString(myIBaseDataTypesRpcLit_RetString_RequestStruct.getInString());
            
            SOAPHeaderBlockInfo headerInfo;
            _response.setRetStringResult(retStringResult);
            
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetString_RetStringResponse_QNAME);
            bodyBlock.setValue(_response);
            bodyBlock.setSerializer(ns1_myIBaseDataTypesRpcLit_RetString_ResponseStruct_LiteralSerializer);
            state.getResponse().setBody(bodyBlock);
            
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: RetByte
     */
    private void invoke_RetByte(StreamingHandlerState state) throws Exception {
        
        org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetByte_RequestStruct myIBaseDataTypesRpcLit_RetByte_RequestStruct = null;
        Object myIBaseDataTypesRpcLit_RetByte_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myIBaseDataTypesRpcLit_RetByte_RequestStructObj instanceof SOAPDeserializationState) {
            myIBaseDataTypesRpcLit_RetByte_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetByte_RequestStruct)((SOAPDeserializationState)myIBaseDataTypesRpcLit_RetByte_RequestStructObj).getInstance();
        } else {
            myIBaseDataTypesRpcLit_RetByte_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetByte_RequestStruct)myIBaseDataTypesRpcLit_RetByte_RequestStructObj;
        }
        
        try {
            org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetByte_ResponseStruct _response = new org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetByte_ResponseStruct();
            short retByteResult = 
                ((org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit) getTarget()).retByte(myIBaseDataTypesRpcLit_RetByte_RequestStruct.getInByte());
            
            SOAPHeaderBlockInfo headerInfo;
            _response.setRetByteResult(retByteResult);
            
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetByte_RetByteResponse_QNAME);
            bodyBlock.setValue(_response);
            bodyBlock.setSerializer(ns1_myIBaseDataTypesRpcLit_RetByte_ResponseStruct_LiteralSerializer);
            state.getResponse().setBody(bodyBlock);
            
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: RetLong
     */
    private void invoke_RetLong(StreamingHandlerState state) throws Exception {
        
        org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetLong_RequestStruct myIBaseDataTypesRpcLit_RetLong_RequestStruct = null;
        Object myIBaseDataTypesRpcLit_RetLong_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myIBaseDataTypesRpcLit_RetLong_RequestStructObj instanceof SOAPDeserializationState) {
            myIBaseDataTypesRpcLit_RetLong_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetLong_RequestStruct)((SOAPDeserializationState)myIBaseDataTypesRpcLit_RetLong_RequestStructObj).getInstance();
        } else {
            myIBaseDataTypesRpcLit_RetLong_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetLong_RequestStruct)myIBaseDataTypesRpcLit_RetLong_RequestStructObj;
        }
        
        try {
            org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetLong_ResponseStruct _response = new org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetLong_ResponseStruct();
            long retLongResult = 
                ((org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit) getTarget()).retLong(myIBaseDataTypesRpcLit_RetLong_RequestStruct.getInLong());
            
            SOAPHeaderBlockInfo headerInfo;
            _response.setRetLongResult(retLongResult);
            
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetLong_RetLongResponse_QNAME);
            bodyBlock.setValue(_response);
            bodyBlock.setSerializer(ns1_myIBaseDataTypesRpcLit_RetLong_ResponseStruct_LiteralSerializer);
            state.getResponse().setBody(bodyBlock);
            
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: RetDouble
     */
    private void invoke_RetDouble(StreamingHandlerState state) throws Exception {
        
        org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetDouble_RequestStruct myIBaseDataTypesRpcLit_RetDouble_RequestStruct = null;
        Object myIBaseDataTypesRpcLit_RetDouble_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myIBaseDataTypesRpcLit_RetDouble_RequestStructObj instanceof SOAPDeserializationState) {
            myIBaseDataTypesRpcLit_RetDouble_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetDouble_RequestStruct)((SOAPDeserializationState)myIBaseDataTypesRpcLit_RetDouble_RequestStructObj).getInstance();
        } else {
            myIBaseDataTypesRpcLit_RetDouble_RequestStruct = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetDouble_RequestStruct)myIBaseDataTypesRpcLit_RetDouble_RequestStructObj;
        }
        
        try {
            org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetDouble_ResponseStruct _response = new org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetDouble_ResponseStruct();
            double retDoubleResult = 
                ((org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit) getTarget()).retDouble(myIBaseDataTypesRpcLit_RetDouble_RequestStruct.getInDouble());
            
            SOAPHeaderBlockInfo headerInfo;
            _response.setRetDoubleResult(retDoubleResult);
            
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetDouble_RetDoubleResponse_QNAME);
            bodyBlock.setValue(_response);
            bodyBlock.setSerializer(ns1_myIBaseDataTypesRpcLit_RetDouble_ResponseStruct_LiteralSerializer);
            state.getResponse().setBody(bodyBlock);
            
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method must determine the opcode of the operation that has been invoked.
     */
    protected void peekFirstBodyElement(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        if (bodyReader.getName().equals(ns1_RetDateTime_RetDateTime_QNAME)) {
            state.getRequest().setOperationCode(RetDateTime_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_RetSingle_RetSingle_QNAME)) {
            state.getRequest().setOperationCode(RetSingle_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_RetChar_RetChar_QNAME)) {
            state.getRequest().setOperationCode(RetChar_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_RetInt_RetInt_QNAME)) {
            state.getRequest().setOperationCode(RetInt_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_RetULong_RetULong_QNAME)) {
            state.getRequest().setOperationCode(RetULong_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_RetUri_RetUri_QNAME)) {
            state.getRequest().setOperationCode(RetUri_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_RetQName_RetQName_QNAME)) {
            state.getRequest().setOperationCode(RetQName_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_RetShort_RetShort_QNAME)) {
            state.getRequest().setOperationCode(RetShort_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_RetDecimal_RetDecimal_QNAME)) {
            state.getRequest().setOperationCode(RetDecimal_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_RetUShort_RetUShort_QNAME)) {
            state.getRequest().setOperationCode(RetUShort_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_RetByteArray_RetByteArray_QNAME)) {
            state.getRequest().setOperationCode(RetByteArray_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_RetTimeSpan_RetTimeSpan_QNAME)) {
            state.getRequest().setOperationCode(RetTimeSpan_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_RetObject_RetObject_QNAME)) {
            state.getRequest().setOperationCode(RetObject_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_RetSByte_RetSByte_QNAME)) {
            state.getRequest().setOperationCode(RetSByte_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_RetUInt_RetUInt_QNAME)) {
            state.getRequest().setOperationCode(RetUInt_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_RetGuid_RetGuid_QNAME)) {
            state.getRequest().setOperationCode(RetGuid_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_RetBool_RetBool_QNAME)) {
            state.getRequest().setOperationCode(RetBool_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_RetFloat_RetFloat_QNAME)) {
            state.getRequest().setOperationCode(RetFloat_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_RetString_RetString_QNAME)) {
            state.getRequest().setOperationCode(RetString_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_RetByte_RetByte_QNAME)) {
            state.getRequest().setOperationCode(RetByte_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_RetLong_RetLong_QNAME)) {
            state.getRequest().setOperationCode(RetLong_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_RetDouble_RetDouble_QNAME)) {
            state.getRequest().setOperationCode(RetDouble_OPCODE);
        }
        else {
            throw new SOAPProtocolViolationException("soap.operation.unrecognized", bodyReader.getName().toString());
        }
    }
    
    /*
     *  this method deserializes the request/response structure in the body
     */
    protected void readFirstBodyElement(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState  state) throws Exception {
        int opcode = state.getRequest().getOperationCode();
        switch (opcode) {
            case RetDateTime_OPCODE:
                deserialize_RetDateTime(bodyReader, deserializationContext, state);
                break;
            case RetSingle_OPCODE:
                deserialize_RetSingle(bodyReader, deserializationContext, state);
                break;
            case RetChar_OPCODE:
                deserialize_RetChar(bodyReader, deserializationContext, state);
                break;
            case RetInt_OPCODE:
                deserialize_RetInt(bodyReader, deserializationContext, state);
                break;
            case RetULong_OPCODE:
                deserialize_RetULong(bodyReader, deserializationContext, state);
                break;
            case RetUri_OPCODE:
                deserialize_RetUri(bodyReader, deserializationContext, state);
                break;
            case RetQName_OPCODE:
                deserialize_RetQName(bodyReader, deserializationContext, state);
                break;
            case RetShort_OPCODE:
                deserialize_RetShort(bodyReader, deserializationContext, state);
                break;
            case RetDecimal_OPCODE:
                deserialize_RetDecimal(bodyReader, deserializationContext, state);
                break;
            case RetUShort_OPCODE:
                deserialize_RetUShort(bodyReader, deserializationContext, state);
                break;
            case RetByteArray_OPCODE:
                deserialize_RetByteArray(bodyReader, deserializationContext, state);
                break;
            case RetTimeSpan_OPCODE:
                deserialize_RetTimeSpan(bodyReader, deserializationContext, state);
                break;
            case RetObject_OPCODE:
                deserialize_RetObject(bodyReader, deserializationContext, state);
                break;
            case RetSByte_OPCODE:
                deserialize_RetSByte(bodyReader, deserializationContext, state);
                break;
            case RetUInt_OPCODE:
                deserialize_RetUInt(bodyReader, deserializationContext, state);
                break;
            case RetGuid_OPCODE:
                deserialize_RetGuid(bodyReader, deserializationContext, state);
                break;
            case RetBool_OPCODE:
                deserialize_RetBool(bodyReader, deserializationContext, state);
                break;
            case RetFloat_OPCODE:
                deserialize_RetFloat(bodyReader, deserializationContext, state);
                break;
            case RetString_OPCODE:
                deserialize_RetString(bodyReader, deserializationContext, state);
                break;
            case RetByte_OPCODE:
                deserialize_RetByte(bodyReader, deserializationContext, state);
                break;
            case RetLong_OPCODE:
                deserialize_RetLong(bodyReader, deserializationContext, state);
                break;
            case RetDouble_OPCODE:
                deserialize_RetDouble(bodyReader, deserializationContext, state);
                break;
            default:
                throw new SOAPProtocolViolationException("soap.operation.unrecognized", java.lang.Integer.toString(opcode));
        }
    }
    
    
    
    /*
     * This method deserializes the body of the RetDateTime operation.
     */
    private void deserialize_RetDateTime(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myIBaseDataTypesRpcLit_RetDateTime_RequestStructObj =
            ns1_myIBaseDataTypesRpcLit_RetDateTime_RequestStruct_LiteralSerializer.deserialize(ns1_RetDateTime_RetDateTime_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetDateTime_RetDateTime_QNAME);
        bodyBlock.setValue(myIBaseDataTypesRpcLit_RetDateTime_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the RetSingle operation.
     */
    private void deserialize_RetSingle(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myIBaseDataTypesRpcLit_RetSingle_RequestStructObj =
            ns1_myIBaseDataTypesRpcLit_RetSingle_RequestStruct_LiteralSerializer.deserialize(ns1_RetSingle_RetSingle_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetSingle_RetSingle_QNAME);
        bodyBlock.setValue(myIBaseDataTypesRpcLit_RetSingle_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the RetChar operation.
     */
    private void deserialize_RetChar(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myIBaseDataTypesRpcLit_RetChar_RequestStructObj =
            ns1_myIBaseDataTypesRpcLit_RetChar_RequestStruct_LiteralSerializer.deserialize(ns1_RetChar_RetChar_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetChar_RetChar_QNAME);
        bodyBlock.setValue(myIBaseDataTypesRpcLit_RetChar_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the RetInt operation.
     */
    private void deserialize_RetInt(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myIBaseDataTypesRpcLit_RetInt_RequestStructObj =
            ns1_myIBaseDataTypesRpcLit_RetInt_RequestStruct_LiteralSerializer.deserialize(ns1_RetInt_RetInt_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetInt_RetInt_QNAME);
        bodyBlock.setValue(myIBaseDataTypesRpcLit_RetInt_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the RetULong operation.
     */
    private void deserialize_RetULong(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myIBaseDataTypesRpcLit_RetULong_RequestStructObj =
            ns1_myIBaseDataTypesRpcLit_RetULong_RequestStruct_LiteralSerializer.deserialize(ns1_RetULong_RetULong_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetULong_RetULong_QNAME);
        bodyBlock.setValue(myIBaseDataTypesRpcLit_RetULong_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the RetUri operation.
     */
    private void deserialize_RetUri(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myIBaseDataTypesRpcLit_RetUri_RequestStructObj =
            ns1_myIBaseDataTypesRpcLit_RetUri_RequestStruct_LiteralSerializer.deserialize(ns1_RetUri_RetUri_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetUri_RetUri_QNAME);
        bodyBlock.setValue(myIBaseDataTypesRpcLit_RetUri_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the RetQName operation.
     */
    private void deserialize_RetQName(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myIBaseDataTypesRpcLit_RetQName_RequestStructObj =
            ns1_myIBaseDataTypesRpcLit_RetQName_RequestStruct_LiteralSerializer.deserialize(ns1_RetQName_RetQName_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetQName_RetQName_QNAME);
        bodyBlock.setValue(myIBaseDataTypesRpcLit_RetQName_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the RetShort operation.
     */
    private void deserialize_RetShort(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myIBaseDataTypesRpcLit_RetShort_RequestStructObj =
            ns1_myIBaseDataTypesRpcLit_RetShort_RequestStruct_LiteralSerializer.deserialize(ns1_RetShort_RetShort_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetShort_RetShort_QNAME);
        bodyBlock.setValue(myIBaseDataTypesRpcLit_RetShort_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the RetDecimal operation.
     */
    private void deserialize_RetDecimal(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myIBaseDataTypesRpcLit_RetDecimal_RequestStructObj =
            ns1_myIBaseDataTypesRpcLit_RetDecimal_RequestStruct_LiteralSerializer.deserialize(ns1_RetDecimal_RetDecimal_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetDecimal_RetDecimal_QNAME);
        bodyBlock.setValue(myIBaseDataTypesRpcLit_RetDecimal_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the RetUShort operation.
     */
    private void deserialize_RetUShort(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myIBaseDataTypesRpcLit_RetUShort_RequestStructObj =
            ns1_myIBaseDataTypesRpcLit_RetUShort_RequestStruct_LiteralSerializer.deserialize(ns1_RetUShort_RetUShort_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetUShort_RetUShort_QNAME);
        bodyBlock.setValue(myIBaseDataTypesRpcLit_RetUShort_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the RetByteArray operation.
     */
    private void deserialize_RetByteArray(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myIBaseDataTypesRpcLit_RetByteArray_RequestStructObj =
            ns1_myIBaseDataTypesRpcLit_RetByteArray_RequestStruct_LiteralSerializer.deserialize(ns1_RetByteArray_RetByteArray_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetByteArray_RetByteArray_QNAME);
        bodyBlock.setValue(myIBaseDataTypesRpcLit_RetByteArray_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the RetTimeSpan operation.
     */
    private void deserialize_RetTimeSpan(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myIBaseDataTypesRpcLit_RetTimeSpan_RequestStructObj =
            ns1_myIBaseDataTypesRpcLit_RetTimeSpan_RequestStruct_LiteralSerializer.deserialize(ns1_RetTimeSpan_RetTimeSpan_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetTimeSpan_RetTimeSpan_QNAME);
        bodyBlock.setValue(myIBaseDataTypesRpcLit_RetTimeSpan_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the RetObject operation.
     */
    private void deserialize_RetObject(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myIBaseDataTypesRpcLit_RetObject_RequestStructObj =
            ns1_myIBaseDataTypesRpcLit_RetObject_RequestStruct_LiteralSerializer.deserialize(ns1_RetObject_RetObject_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetObject_RetObject_QNAME);
        bodyBlock.setValue(myIBaseDataTypesRpcLit_RetObject_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the RetSByte operation.
     */
    private void deserialize_RetSByte(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myIBaseDataTypesRpcLit_RetSByte_RequestStructObj =
            ns1_myIBaseDataTypesRpcLit_RetSByte_RequestStruct_LiteralSerializer.deserialize(ns1_RetSByte_RetSByte_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetSByte_RetSByte_QNAME);
        bodyBlock.setValue(myIBaseDataTypesRpcLit_RetSByte_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the RetUInt operation.
     */
    private void deserialize_RetUInt(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myIBaseDataTypesRpcLit_RetUInt_RequestStructObj =
            ns1_myIBaseDataTypesRpcLit_RetUInt_RequestStruct_LiteralSerializer.deserialize(ns1_RetUInt_RetUInt_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetUInt_RetUInt_QNAME);
        bodyBlock.setValue(myIBaseDataTypesRpcLit_RetUInt_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the RetGuid operation.
     */
    private void deserialize_RetGuid(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myIBaseDataTypesRpcLit_RetGuid_RequestStructObj =
            ns1_myIBaseDataTypesRpcLit_RetGuid_RequestStruct_LiteralSerializer.deserialize(ns1_RetGuid_RetGuid_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetGuid_RetGuid_QNAME);
        bodyBlock.setValue(myIBaseDataTypesRpcLit_RetGuid_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the RetBool operation.
     */
    private void deserialize_RetBool(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myIBaseDataTypesRpcLit_RetBool_RequestStructObj =
            ns1_myIBaseDataTypesRpcLit_RetBool_RequestStruct_LiteralSerializer.deserialize(ns1_RetBool_RetBool_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetBool_RetBool_QNAME);
        bodyBlock.setValue(myIBaseDataTypesRpcLit_RetBool_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the RetFloat operation.
     */
    private void deserialize_RetFloat(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myIBaseDataTypesRpcLit_RetFloat_RequestStructObj =
            ns1_myIBaseDataTypesRpcLit_RetFloat_RequestStruct_LiteralSerializer.deserialize(ns1_RetFloat_RetFloat_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetFloat_RetFloat_QNAME);
        bodyBlock.setValue(myIBaseDataTypesRpcLit_RetFloat_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the RetString operation.
     */
    private void deserialize_RetString(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myIBaseDataTypesRpcLit_RetString_RequestStructObj =
            ns1_myIBaseDataTypesRpcLit_RetString_RequestStruct_LiteralSerializer.deserialize(ns1_RetString_RetString_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetString_RetString_QNAME);
        bodyBlock.setValue(myIBaseDataTypesRpcLit_RetString_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the RetByte operation.
     */
    private void deserialize_RetByte(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myIBaseDataTypesRpcLit_RetByte_RequestStructObj =
            ns1_myIBaseDataTypesRpcLit_RetByte_RequestStruct_LiteralSerializer.deserialize(ns1_RetByte_RetByte_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetByte_RetByte_QNAME);
        bodyBlock.setValue(myIBaseDataTypesRpcLit_RetByte_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the RetLong operation.
     */
    private void deserialize_RetLong(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myIBaseDataTypesRpcLit_RetLong_RequestStructObj =
            ns1_myIBaseDataTypesRpcLit_RetLong_RequestStruct_LiteralSerializer.deserialize(ns1_RetLong_RetLong_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetLong_RetLong_QNAME);
        bodyBlock.setValue(myIBaseDataTypesRpcLit_RetLong_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the RetDouble operation.
     */
    private void deserialize_RetDouble(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myIBaseDataTypesRpcLit_RetDouble_RequestStructObj =
            ns1_myIBaseDataTypesRpcLit_RetDouble_RequestStruct_LiteralSerializer.deserialize(ns1_RetDouble_RetDouble_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RetDouble_RetDouble_QNAME);
        bodyBlock.setValue(myIBaseDataTypesRpcLit_RetDouble_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    
    /*
     * This method must invoke the correct method on the servant based on the opcode.
     */
    protected void processingHook(StreamingHandlerState state) throws Exception {
        switch (state.getRequest().getOperationCode()) {
            case RetDateTime_OPCODE:
                invoke_RetDateTime(state);
                break;
            case RetSingle_OPCODE:
                invoke_RetSingle(state);
                break;
            case RetChar_OPCODE:
                invoke_RetChar(state);
                break;
            case RetInt_OPCODE:
                invoke_RetInt(state);
                break;
            case RetULong_OPCODE:
                invoke_RetULong(state);
                break;
            case RetUri_OPCODE:
                invoke_RetUri(state);
                break;
            case RetQName_OPCODE:
                invoke_RetQName(state);
                break;
            case RetShort_OPCODE:
                invoke_RetShort(state);
                break;
            case RetDecimal_OPCODE:
                invoke_RetDecimal(state);
                break;
            case RetUShort_OPCODE:
                invoke_RetUShort(state);
                break;
            case RetByteArray_OPCODE:
                invoke_RetByteArray(state);
                break;
            case RetTimeSpan_OPCODE:
                invoke_RetTimeSpan(state);
                break;
            case RetObject_OPCODE:
                invoke_RetObject(state);
                break;
            case RetSByte_OPCODE:
                invoke_RetSByte(state);
                break;
            case RetUInt_OPCODE:
                invoke_RetUInt(state);
                break;
            case RetGuid_OPCODE:
                invoke_RetGuid(state);
                break;
            case RetBool_OPCODE:
                invoke_RetBool(state);
                break;
            case RetFloat_OPCODE:
                invoke_RetFloat(state);
                break;
            case RetString_OPCODE:
                invoke_RetString(state);
                break;
            case RetByte_OPCODE:
                invoke_RetByte(state);
                break;
            case RetLong_OPCODE:
                invoke_RetLong(state);
                break;
            case RetDouble_OPCODE:
                invoke_RetDouble(state);
                break;
            default:
                throw new SOAPProtocolViolationException("soap.operation.unrecognized", java.lang.Integer.toString(state.getRequest().getOperationCode()));
        }
    }
    
    protected java.lang.String getDefaultEnvelopeEncodingStyle() {
        return null;
    }
    
    public java.lang.String getImplicitEnvelopeEncodingStyle() {
        return "";
    }
    
    
    /*
     * This method must determine the opcode of the operation given the QName of the first body element.
     */
    public int getOpcodeForFirstBodyElementName(QName name) {
        if (name == null) {
            return InternalSOAPMessage.NO_OPERATION;
        }
        if (name.equals(ns1_RetDateTime_RetDateTime_QNAME)) {
            return RetDateTime_OPCODE;
        }
        if (name.equals(ns1_RetSingle_RetSingle_QNAME)) {
            return RetSingle_OPCODE;
        }
        if (name.equals(ns1_RetChar_RetChar_QNAME)) {
            return RetChar_OPCODE;
        }
        if (name.equals(ns1_RetInt_RetInt_QNAME)) {
            return RetInt_OPCODE;
        }
        if (name.equals(ns1_RetULong_RetULong_QNAME)) {
            return RetULong_OPCODE;
        }
        if (name.equals(ns1_RetUri_RetUri_QNAME)) {
            return RetUri_OPCODE;
        }
        if (name.equals(ns1_RetQName_RetQName_QNAME)) {
            return RetQName_OPCODE;
        }
        if (name.equals(ns1_RetShort_RetShort_QNAME)) {
            return RetShort_OPCODE;
        }
        if (name.equals(ns1_RetDecimal_RetDecimal_QNAME)) {
            return RetDecimal_OPCODE;
        }
        if (name.equals(ns1_RetUShort_RetUShort_QNAME)) {
            return RetUShort_OPCODE;
        }
        if (name.equals(ns1_RetByteArray_RetByteArray_QNAME)) {
            return RetByteArray_OPCODE;
        }
        if (name.equals(ns1_RetTimeSpan_RetTimeSpan_QNAME)) {
            return RetTimeSpan_OPCODE;
        }
        if (name.equals(ns1_RetObject_RetObject_QNAME)) {
            return RetObject_OPCODE;
        }
        if (name.equals(ns1_RetSByte_RetSByte_QNAME)) {
            return RetSByte_OPCODE;
        }
        if (name.equals(ns1_RetUInt_RetUInt_QNAME)) {
            return RetUInt_OPCODE;
        }
        if (name.equals(ns1_RetGuid_RetGuid_QNAME)) {
            return RetGuid_OPCODE;
        }
        if (name.equals(ns1_RetBool_RetBool_QNAME)) {
            return RetBool_OPCODE;
        }
        if (name.equals(ns1_RetFloat_RetFloat_QNAME)) {
            return RetFloat_OPCODE;
        }
        if (name.equals(ns1_RetString_RetString_QNAME)) {
            return RetString_OPCODE;
        }
        if (name.equals(ns1_RetByte_RetByte_QNAME)) {
            return RetByte_OPCODE;
        }
        if (name.equals(ns1_RetLong_RetLong_QNAME)) {
            return RetLong_OPCODE;
        }
        if (name.equals(ns1_RetDouble_RetDouble_QNAME)) {
            return RetDouble_OPCODE;
        }
        return super.getOpcodeForFirstBodyElementName(name);
    }
    
    
    private Method internalGetMethodForOpcode(int opcode) throws ClassNotFoundException, NoSuchMethodException {
        
        Method theMethod = null;
        
        switch(opcode) {
            case RetDateTime_OPCODE:
                {
                    Class[] carray = { java.util.Calendar.class };
                    theMethod = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit.class).getMethod("retDateTime", carray);
                }
                break;
            
            case RetSingle_OPCODE:
                {
                    Class[] carray = { Float.TYPE };
                    theMethod = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit.class).getMethod("retSingle", carray);
                }
                break;
            
            case RetChar_OPCODE:
                {
                    Class[] carray = { Integer.TYPE };
                    theMethod = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit.class).getMethod("retChar", carray);
                }
                break;
            
            case RetInt_OPCODE:
                {
                    Class[] carray = { Integer.TYPE };
                    theMethod = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit.class).getMethod("retInt", carray);
                }
                break;
            
            case RetULong_OPCODE:
                {
                    Class[] carray = { java.math.BigInteger.class };
                    theMethod = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit.class).getMethod("retULong", carray);
                }
                break;
            
            case RetUri_OPCODE:
                {
                    Class[] carray = { java.net.URI.class };
                    theMethod = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit.class).getMethod("retUri", carray);
                }
                break;
            
            case RetQName_OPCODE:
                {
                    Class[] carray = { javax.xml.namespace.QName.class };
                    theMethod = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit.class).getMethod("retQName", carray);
                }
                break;
            
            case RetShort_OPCODE:
                {
                    Class[] carray = { Short.TYPE };
                    theMethod = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit.class).getMethod("retShort", carray);
                }
                break;
            
            case RetDecimal_OPCODE:
                {
                    Class[] carray = { java.math.BigDecimal.class };
                    theMethod = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit.class).getMethod("retDecimal", carray);
                }
                break;
            
            case RetUShort_OPCODE:
                {
                    Class[] carray = { Integer.TYPE };
                    theMethod = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit.class).getMethod("retUShort", carray);
                }
                break;
            
            case RetByteArray_OPCODE:
                {
                    Class[] carray = { Class.forName("[B") };
                    theMethod = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit.class).getMethod("retByteArray", carray);
                }
                break;
            
            case RetTimeSpan_OPCODE:
                {
                    Class[] carray = { java.lang.String.class };
                    theMethod = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit.class).getMethod("retTimeSpan", carray);
                }
                break;
            
            case RetObject_OPCODE:
                {
                    Class[] carray = { javax.xml.soap.SOAPElement.class };
                    theMethod = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit.class).getMethod("retObject", carray);
                }
                break;
            
            case RetSByte_OPCODE:
                {
                    Class[] carray = { Byte.TYPE };
                    theMethod = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit.class).getMethod("retSByte", carray);
                }
                break;
            
            case RetUInt_OPCODE:
                {
                    Class[] carray = { Long.TYPE };
                    theMethod = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit.class).getMethod("retUInt", carray);
                }
                break;
            
            case RetGuid_OPCODE:
                {
                    Class[] carray = { java.lang.String.class };
                    theMethod = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit.class).getMethod("retGuid", carray);
                }
                break;
            
            case RetBool_OPCODE:
                {
                    Class[] carray = { Boolean.TYPE };
                    theMethod = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit.class).getMethod("retBool", carray);
                }
                break;
            
            case RetFloat_OPCODE:
                {
                    Class[] carray = { Float.TYPE };
                    theMethod = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit.class).getMethod("retFloat", carray);
                }
                break;
            
            case RetString_OPCODE:
                {
                    Class[] carray = { java.lang.String.class };
                    theMethod = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit.class).getMethod("retString", carray);
                }
                break;
            
            case RetByte_OPCODE:
                {
                    Class[] carray = { Short.TYPE };
                    theMethod = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit.class).getMethod("retByte", carray);
                }
                break;
            
            case RetLong_OPCODE:
                {
                    Class[] carray = { Long.TYPE };
                    theMethod = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit.class).getMethod("retLong", carray);
                }
                break;
            
            case RetDouble_OPCODE:
                {
                    Class[] carray = { Double.TYPE };
                    theMethod = (org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit.class).getMethod("retDouble", carray);
                }
                break;
            
            default:
        }
        return theMethod;
    }
    
    private Method[] methodMap = new Method[22];
    
    /*
     * This method returns the Method Obj for a specified opcode.
     */
    public Method getMethodForOpcode(int opcode) throws ClassNotFoundException, NoSuchMethodException {
         
        if (opcode <= InternalSOAPMessage.NO_OPERATION ) {
            return null;
        }
         
        if (opcode >= 22 ) {
            return null;
        }
         
        if (methodMap[opcode] == null)  {
            methodMap[opcode] = internalGetMethodForOpcode(opcode);
        }
         
        return methodMap[opcode];
    }
    
    /*
     * This method returns an array containing (prefix, nsURI) pairs.
     */
    protected java.lang.String[] getNamespaceDeclarations() {
        return myNamespace_declarations;
    }
    
    /*
     * This method returns an array containing the names of the headers we understand.
     */
    public javax.xml.namespace.QName[] getUnderstoodHeaders() {
        return understoodHeaderNames;
    }
    
    private void initialize(InternalTypeMappingRegistry registry) throws Exception {
        ns1_myIBaseDataTypesRpcLit_RetBool_RequestStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetBool_RequestStruct.class, ns1_RetBool_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetSByte_ResponseStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetSByte_ResponseStruct.class, ns1_RetSByteResponse_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetByteArray_ResponseStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetByteArray_ResponseStruct.class, ns1_RetByteArrayResponse_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetLong_ResponseStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetLong_ResponseStruct.class, ns1_RetLongResponse_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetQName_RequestStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetQName_RequestStruct.class, ns1_RetQName_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetObject_RequestStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetObject_RequestStruct.class, ns1_RetObject_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetByte_ResponseStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetByte_ResponseStruct.class, ns1_RetByteResponse_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetLong_RequestStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetLong_RequestStruct.class, ns1_RetLong_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetSByte_RequestStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetSByte_RequestStruct.class, ns1_RetSByte_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetByte_RequestStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetByte_RequestStruct.class, ns1_RetByte_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetGuid_ResponseStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetGuid_ResponseStruct.class, ns1_RetGuidResponse_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetUShort_ResponseStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetUShort_ResponseStruct.class, ns1_RetUShortResponse_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetUShort_RequestStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetUShort_RequestStruct.class, ns1_RetUShort_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetShort_ResponseStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetShort_ResponseStruct.class, ns1_RetShortResponse_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetTimeSpan_RequestStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetTimeSpan_RequestStruct.class, ns1_RetTimeSpan_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetDouble_RequestStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetDouble_RequestStruct.class, ns1_RetDouble_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetULong_RequestStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetULong_RequestStruct.class, ns1_RetULong_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetObject_ResponseStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetObject_ResponseStruct.class, ns1_RetObjectResponse_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetGuid_RequestStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetGuid_RequestStruct.class, ns1_RetGuid_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetBool_ResponseStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetBool_ResponseStruct.class, ns1_RetBoolResponse_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetUri_RequestStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetUri_RequestStruct.class, ns1_RetUri_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetChar_RequestStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetChar_RequestStruct.class, ns1_RetChar_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetString_ResponseStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetString_ResponseStruct.class, ns1_RetStringResponse_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetInt_ResponseStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetInt_ResponseStruct.class, ns1_RetIntResponse_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetQName_ResponseStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetQName_ResponseStruct.class, ns1_RetQNameResponse_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetSingle_ResponseStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetSingle_ResponseStruct.class, ns1_RetSingleResponse_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetDateTime_RequestStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetDateTime_RequestStruct.class, ns1_RetDateTime_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetDouble_ResponseStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetDouble_ResponseStruct.class, ns1_RetDoubleResponse_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetShort_RequestStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetShort_RequestStruct.class, ns1_RetShort_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetUri_ResponseStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetUri_ResponseStruct.class, ns1_RetUriResponse_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetChar_ResponseStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetChar_ResponseStruct.class, ns1_RetCharResponse_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetDecimal_ResponseStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetDecimal_ResponseStruct.class, ns1_RetDecimalResponse_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetString_RequestStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetString_RequestStruct.class, ns1_RetString_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetUInt_RequestStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetUInt_RequestStruct.class, ns1_RetUInt_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetFloat_ResponseStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetFloat_ResponseStruct.class, ns1_RetFloatResponse_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetULong_ResponseStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetULong_ResponseStruct.class, ns1_RetULongResponse_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetInt_RequestStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetInt_RequestStruct.class, ns1_RetInt_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetTimeSpan_ResponseStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetTimeSpan_ResponseStruct.class, ns1_RetTimeSpanResponse_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetDecimal_RequestStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetDecimal_RequestStruct.class, ns1_RetDecimal_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetByteArray_RequestStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetByteArray_RequestStruct.class, ns1_RetByteArray_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetFloat_RequestStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetFloat_RequestStruct.class, ns1_RetFloat_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetDateTime_ResponseStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetDateTime_ResponseStruct.class, ns1_RetDateTimeResponse_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetUInt_ResponseStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetUInt_ResponseStruct.class, ns1_RetUIntResponse_TYPE_QNAME);
        ns1_myIBaseDataTypesRpcLit_RetSingle_RequestStruct_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.jboss.test.ws.interop.microsoft.soapwsdl.BaseDataTypesRpcLit_Service.IBaseDataTypesRpcLit_RetSingle_RequestStruct.class, ns1_RetSingle_TYPE_QNAME);
    }
    
    private static final javax.xml.namespace.QName portName = new QName("http://tempuri.org/", "BasicHttpBinding_IBaseDataTypesRpcLit");
    private static final int RetDateTime_OPCODE = 0;
    private static final int RetSingle_OPCODE = 1;
    private static final int RetChar_OPCODE = 2;
    private static final int RetInt_OPCODE = 3;
    private static final int RetULong_OPCODE = 4;
    private static final int RetUri_OPCODE = 5;
    private static final int RetQName_OPCODE = 6;
    private static final int RetShort_OPCODE = 7;
    private static final int RetDecimal_OPCODE = 8;
    private static final int RetUShort_OPCODE = 9;
    private static final int RetByteArray_OPCODE = 10;
    private static final int RetTimeSpan_OPCODE = 11;
    private static final int RetObject_OPCODE = 12;
    private static final int RetSByte_OPCODE = 13;
    private static final int RetUInt_OPCODE = 14;
    private static final int RetGuid_OPCODE = 15;
    private static final int RetBool_OPCODE = 16;
    private static final int RetFloat_OPCODE = 17;
    private static final int RetString_OPCODE = 18;
    private static final int RetByte_OPCODE = 19;
    private static final int RetLong_OPCODE = 20;
    private static final int RetDouble_OPCODE = 21;
    private static final javax.xml.namespace.QName ns1_RetDateTime_RetDateTime_QNAME = new QName("http://tempuri.org/", "RetDateTime");
    private static final javax.xml.namespace.QName ns1_RetDateTime_TYPE_QNAME = new QName("http://tempuri.org/", "RetDateTime");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetDateTime_RequestStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetDateTime_RetDateTimeResponse_QNAME = new QName("http://tempuri.org/", "RetDateTimeResponse");
    private static final javax.xml.namespace.QName ns1_RetDateTimeResponse_TYPE_QNAME = new QName("http://tempuri.org/", "RetDateTimeResponse");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetDateTime_ResponseStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetSingle_RetSingle_QNAME = new QName("http://tempuri.org/", "RetSingle");
    private static final javax.xml.namespace.QName ns1_RetSingle_TYPE_QNAME = new QName("http://tempuri.org/", "RetSingle");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetSingle_RequestStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetSingle_RetSingleResponse_QNAME = new QName("http://tempuri.org/", "RetSingleResponse");
    private static final javax.xml.namespace.QName ns1_RetSingleResponse_TYPE_QNAME = new QName("http://tempuri.org/", "RetSingleResponse");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetSingle_ResponseStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetChar_RetChar_QNAME = new QName("http://tempuri.org/", "RetChar");
    private static final javax.xml.namespace.QName ns1_RetChar_TYPE_QNAME = new QName("http://tempuri.org/", "RetChar");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetChar_RequestStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetChar_RetCharResponse_QNAME = new QName("http://tempuri.org/", "RetCharResponse");
    private static final javax.xml.namespace.QName ns1_RetCharResponse_TYPE_QNAME = new QName("http://tempuri.org/", "RetCharResponse");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetChar_ResponseStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetInt_RetInt_QNAME = new QName("http://tempuri.org/", "RetInt");
    private static final javax.xml.namespace.QName ns1_RetInt_TYPE_QNAME = new QName("http://tempuri.org/", "RetInt");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetInt_RequestStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetInt_RetIntResponse_QNAME = new QName("http://tempuri.org/", "RetIntResponse");
    private static final javax.xml.namespace.QName ns1_RetIntResponse_TYPE_QNAME = new QName("http://tempuri.org/", "RetIntResponse");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetInt_ResponseStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetULong_RetULong_QNAME = new QName("http://tempuri.org/", "RetULong");
    private static final javax.xml.namespace.QName ns1_RetULong_TYPE_QNAME = new QName("http://tempuri.org/", "RetULong");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetULong_RequestStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetULong_RetULongResponse_QNAME = new QName("http://tempuri.org/", "RetULongResponse");
    private static final javax.xml.namespace.QName ns1_RetULongResponse_TYPE_QNAME = new QName("http://tempuri.org/", "RetULongResponse");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetULong_ResponseStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetUri_RetUri_QNAME = new QName("http://tempuri.org/", "RetUri");
    private static final javax.xml.namespace.QName ns1_RetUri_TYPE_QNAME = new QName("http://tempuri.org/", "RetUri");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetUri_RequestStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetUri_RetUriResponse_QNAME = new QName("http://tempuri.org/", "RetUriResponse");
    private static final javax.xml.namespace.QName ns1_RetUriResponse_TYPE_QNAME = new QName("http://tempuri.org/", "RetUriResponse");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetUri_ResponseStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetQName_RetQName_QNAME = new QName("http://tempuri.org/", "RetQName");
    private static final javax.xml.namespace.QName ns1_RetQName_TYPE_QNAME = new QName("http://tempuri.org/", "RetQName");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetQName_RequestStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetQName_RetQNameResponse_QNAME = new QName("http://tempuri.org/", "RetQNameResponse");
    private static final javax.xml.namespace.QName ns1_RetQNameResponse_TYPE_QNAME = new QName("http://tempuri.org/", "RetQNameResponse");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetQName_ResponseStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetShort_RetShort_QNAME = new QName("http://tempuri.org/", "RetShort");
    private static final javax.xml.namespace.QName ns1_RetShort_TYPE_QNAME = new QName("http://tempuri.org/", "RetShort");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetShort_RequestStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetShort_RetShortResponse_QNAME = new QName("http://tempuri.org/", "RetShortResponse");
    private static final javax.xml.namespace.QName ns1_RetShortResponse_TYPE_QNAME = new QName("http://tempuri.org/", "RetShortResponse");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetShort_ResponseStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetDecimal_RetDecimal_QNAME = new QName("http://tempuri.org/", "RetDecimal");
    private static final javax.xml.namespace.QName ns1_RetDecimal_TYPE_QNAME = new QName("http://tempuri.org/", "RetDecimal");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetDecimal_RequestStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetDecimal_RetDecimalResponse_QNAME = new QName("http://tempuri.org/", "RetDecimalResponse");
    private static final javax.xml.namespace.QName ns1_RetDecimalResponse_TYPE_QNAME = new QName("http://tempuri.org/", "RetDecimalResponse");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetDecimal_ResponseStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetUShort_RetUShort_QNAME = new QName("http://tempuri.org/", "RetUShort");
    private static final javax.xml.namespace.QName ns1_RetUShort_TYPE_QNAME = new QName("http://tempuri.org/", "RetUShort");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetUShort_RequestStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetUShort_RetUShortResponse_QNAME = new QName("http://tempuri.org/", "RetUShortResponse");
    private static final javax.xml.namespace.QName ns1_RetUShortResponse_TYPE_QNAME = new QName("http://tempuri.org/", "RetUShortResponse");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetUShort_ResponseStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetByteArray_RetByteArray_QNAME = new QName("http://tempuri.org/", "RetByteArray");
    private static final javax.xml.namespace.QName ns1_RetByteArray_TYPE_QNAME = new QName("http://tempuri.org/", "RetByteArray");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetByteArray_RequestStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetByteArray_RetByteArrayResponse_QNAME = new QName("http://tempuri.org/", "RetByteArrayResponse");
    private static final javax.xml.namespace.QName ns1_RetByteArrayResponse_TYPE_QNAME = new QName("http://tempuri.org/", "RetByteArrayResponse");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetByteArray_ResponseStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetTimeSpan_RetTimeSpan_QNAME = new QName("http://tempuri.org/", "RetTimeSpan");
    private static final javax.xml.namespace.QName ns1_RetTimeSpan_TYPE_QNAME = new QName("http://tempuri.org/", "RetTimeSpan");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetTimeSpan_RequestStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetTimeSpan_RetTimeSpanResponse_QNAME = new QName("http://tempuri.org/", "RetTimeSpanResponse");
    private static final javax.xml.namespace.QName ns1_RetTimeSpanResponse_TYPE_QNAME = new QName("http://tempuri.org/", "RetTimeSpanResponse");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetTimeSpan_ResponseStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetObject_RetObject_QNAME = new QName("http://tempuri.org/", "RetObject");
    private static final javax.xml.namespace.QName ns1_RetObject_TYPE_QNAME = new QName("http://tempuri.org/", "RetObject");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetObject_RequestStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetObject_RetObjectResponse_QNAME = new QName("http://tempuri.org/", "RetObjectResponse");
    private static final javax.xml.namespace.QName ns1_RetObjectResponse_TYPE_QNAME = new QName("http://tempuri.org/", "RetObjectResponse");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetObject_ResponseStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetSByte_RetSByte_QNAME = new QName("http://tempuri.org/", "RetSByte");
    private static final javax.xml.namespace.QName ns1_RetSByte_TYPE_QNAME = new QName("http://tempuri.org/", "RetSByte");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetSByte_RequestStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetSByte_RetSByteResponse_QNAME = new QName("http://tempuri.org/", "RetSByteResponse");
    private static final javax.xml.namespace.QName ns1_RetSByteResponse_TYPE_QNAME = new QName("http://tempuri.org/", "RetSByteResponse");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetSByte_ResponseStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetUInt_RetUInt_QNAME = new QName("http://tempuri.org/", "RetUInt");
    private static final javax.xml.namespace.QName ns1_RetUInt_TYPE_QNAME = new QName("http://tempuri.org/", "RetUInt");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetUInt_RequestStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetUInt_RetUIntResponse_QNAME = new QName("http://tempuri.org/", "RetUIntResponse");
    private static final javax.xml.namespace.QName ns1_RetUIntResponse_TYPE_QNAME = new QName("http://tempuri.org/", "RetUIntResponse");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetUInt_ResponseStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetGuid_RetGuid_QNAME = new QName("http://tempuri.org/", "RetGuid");
    private static final javax.xml.namespace.QName ns1_RetGuid_TYPE_QNAME = new QName("http://tempuri.org/", "RetGuid");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetGuid_RequestStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetGuid_RetGuidResponse_QNAME = new QName("http://tempuri.org/", "RetGuidResponse");
    private static final javax.xml.namespace.QName ns1_RetGuidResponse_TYPE_QNAME = new QName("http://tempuri.org/", "RetGuidResponse");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetGuid_ResponseStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetBool_RetBool_QNAME = new QName("http://tempuri.org/", "RetBool");
    private static final javax.xml.namespace.QName ns1_RetBool_TYPE_QNAME = new QName("http://tempuri.org/", "RetBool");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetBool_RequestStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetBool_RetBoolResponse_QNAME = new QName("http://tempuri.org/", "RetBoolResponse");
    private static final javax.xml.namespace.QName ns1_RetBoolResponse_TYPE_QNAME = new QName("http://tempuri.org/", "RetBoolResponse");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetBool_ResponseStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetFloat_RetFloat_QNAME = new QName("http://tempuri.org/", "RetFloat");
    private static final javax.xml.namespace.QName ns1_RetFloat_TYPE_QNAME = new QName("http://tempuri.org/", "RetFloat");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetFloat_RequestStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetFloat_RetFloatResponse_QNAME = new QName("http://tempuri.org/", "RetFloatResponse");
    private static final javax.xml.namespace.QName ns1_RetFloatResponse_TYPE_QNAME = new QName("http://tempuri.org/", "RetFloatResponse");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetFloat_ResponseStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetString_RetString_QNAME = new QName("http://tempuri.org/", "RetString");
    private static final javax.xml.namespace.QName ns1_RetString_TYPE_QNAME = new QName("http://tempuri.org/", "RetString");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetString_RequestStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetString_RetStringResponse_QNAME = new QName("http://tempuri.org/", "RetStringResponse");
    private static final javax.xml.namespace.QName ns1_RetStringResponse_TYPE_QNAME = new QName("http://tempuri.org/", "RetStringResponse");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetString_ResponseStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetByte_RetByte_QNAME = new QName("http://tempuri.org/", "RetByte");
    private static final javax.xml.namespace.QName ns1_RetByte_TYPE_QNAME = new QName("http://tempuri.org/", "RetByte");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetByte_RequestStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetByte_RetByteResponse_QNAME = new QName("http://tempuri.org/", "RetByteResponse");
    private static final javax.xml.namespace.QName ns1_RetByteResponse_TYPE_QNAME = new QName("http://tempuri.org/", "RetByteResponse");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetByte_ResponseStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetLong_RetLong_QNAME = new QName("http://tempuri.org/", "RetLong");
    private static final javax.xml.namespace.QName ns1_RetLong_TYPE_QNAME = new QName("http://tempuri.org/", "RetLong");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetLong_RequestStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetLong_RetLongResponse_QNAME = new QName("http://tempuri.org/", "RetLongResponse");
    private static final javax.xml.namespace.QName ns1_RetLongResponse_TYPE_QNAME = new QName("http://tempuri.org/", "RetLongResponse");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetLong_ResponseStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetDouble_RetDouble_QNAME = new QName("http://tempuri.org/", "RetDouble");
    private static final javax.xml.namespace.QName ns1_RetDouble_TYPE_QNAME = new QName("http://tempuri.org/", "RetDouble");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetDouble_RequestStruct_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_RetDouble_RetDoubleResponse_QNAME = new QName("http://tempuri.org/", "RetDoubleResponse");
    private static final javax.xml.namespace.QName ns1_RetDoubleResponse_TYPE_QNAME = new QName("http://tempuri.org/", "RetDoubleResponse");
    private CombinedSerializer ns1_myIBaseDataTypesRpcLit_RetDouble_ResponseStruct_LiteralSerializer;
    private static final java.lang.String[] myNamespace_declarations =
                                        new java.lang.String[] {
                                            "ns0", "http://tempuri.org/"
                                        };
    
    private static final QName[] understoodHeaderNames = new QName[] {  };
}
