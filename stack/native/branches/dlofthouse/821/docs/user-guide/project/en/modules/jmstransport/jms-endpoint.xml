<?xml version="1.0" encoding="UTF-8"?>

<!-- $Id$ -->

<sect1 id="jms-endpoint">
  
  <title>JMS Endpoint</title>
  
  <para>In this section we describe how to expose an EJB Message Driven Bean as service endpoint.</para>
  
  <para><command>The Message Driven Bean</command></para>
  
  <para>First you setup an ordinary message driven bean in ejb-jar.xml and jboss.xml</para>
  
  <para>
    <programlisting><![CDATA[
  <ejb-jar>
    <enterprise-beans>
      <message-driven>
        <ejb-name>OrganizationMDB</ejb-name>
        <ejb-class>org.jboss.test.ws.samples.jmstransport.OrganizationJMSEndpoint</ejb-class>
        <message-selector></message-selector>
        <transaction-type>Container</transaction-type>
        <acknowledge-mode>AUTO_ACKNOWLEDGE</acknowledge-mode>
        <message-driven-destination>
          <destination-type>javax.jms.Queue</destination-type>
          <subscription-durability>NonDurable</subscription-durability>
        </message-driven-destination>
      </message-driven>
    </enterprise-beans>
  </ejb-jar>
    
  <jboss>
    <enterprise-beans>
      <message-driven>
        <ejb-name>OrganizationMDB</ejb-name>
        <destination-jndi-name>queue/RequestQueue</destination-jndi-name>
        <depends>jboss.mq.destination:service=Queue,name=RequestQueue</depends>
      </message-driven>
    </enterprise-beans>
  </jboss>
  ]]></programlisting></para>
  
  <para>The implementation extends 
    <ulink url="http://fisheye.jboss.com/viewrep/JBoss/jboss/src/main/org/jboss/webservice/transport/jms/JMSTransportSupport.java?r=HEAD">
      org.jboss.webservice.transport.jms.JMSTransportSupport</ulink>, which is the actual MDB and takes care of decoding the incomming JMS
      message and dispatching it to the target endpoint bean.</para>
  
  <para>
    <programlisting><![CDATA[
  public class OrganizationJMSEndpoint extends JMSTransportSupport
  {
     // provide logging
     private static final Logger log = Logger.getLogger(OrganizationJMSEndpoint.class);
  
     /** Get the contact info */
     public String getContactInfo(String organization) throws RemoteException
     {
        log.info("getContactInfo: " + organization);
        return "The '" + organization + "' boss is currently out of office, please call again.";
     }
  }
  ]]></programlisting></para>

  <para><command>Packaging the JMS Endpoint</command></para>
  
  <para>A JMS endpoint is packaged like an <link linkend="jsr109-ejb-endpoint">JSR-109 EJB Endpoint</link> and uses the standard webservices.xml
  descriptor</para>
  
  <para>
    <programlisting><![CDATA[
  <webservices ...>
   <webservice-description>
    <webservice-description-name>OrganizationService</webservice-description-name>
    <wsdl-file>META-INF/wsdl/OrganizationService.wsdl</wsdl-file>
    <jaxrpc-mapping-file>META-INF/jaxrpc-mapping.xml</jaxrpc-mapping-file>
    <port-component>
     <port-component-name>OrganizationPort</port-component-name>
     <wsdl-port>impl:OrganizationPort</wsdl-port>
     <service-endpoint-interface>
       org.jboss.test.ws.samples.jmstransport.Organization
     </service-endpoint-interface>
     <service-impl-bean>
      <ejb-link>OrganizationMDB</ejb-link>
     </service-impl-bean>
    </port-component>
   </webservice-description>
  </webservices>
   ]]></programlisting></para>
  
  
</sect1>